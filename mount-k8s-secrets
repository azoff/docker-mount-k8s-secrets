#!/usr/bin/env sh

set -eo pipefail

SECRET_NAME="$1"
shift

if [[ "$SECRET_NAME" == '' ]]; then
	echo "usage: $0 <secret> [key1] [key2] ... [keyN]"
	exit 2
fi

if ! test -f "$KUBECONFIG"; then
	echo "$KUBECONFIG: please provide a kubeconfig file"
	exit 2
fi

KUBE_NAMESPACE="${KUBE_NAMESPACE:-$K8S_DEFAULT_NAMESPACE}"
echo "fetching $KUBE_NAMESPACE/secret/$SECRET_NAME..."
SECRET_DATA=$(kubectl -n $KUBE_NAMESPACE get secret/$SECRET_NAME -o json | jq .data)

KEYS="$@"
if [[ "$KEYS" == '' ]]; then
	echo "fetching all keys..."
	KEYS=$(echo $SECRET_DATA | jq -r '. | keys[]')
else
	echo "using keys: $KEYS..."
fi

SECRET_PATH="$SECRETS_MNT/$SECRET_NAME"
echo "checking secret mount path..."
mkdir -p $SECRET_PATH

for KEY in $KEYS; do
    VALUE_DATA=$(echo $SECRET_DATA | jq -r ".[\"$KEY\"]")
    if [[ "$VALUE_DATA" == "" ]]; then
    	echo "$KEY: key not found in secret"
    	exit 1
    fi
	VALUE_PATH="$SECRET_PATH/$KEY"
    echo "mounting $VALUE_PATH..."
    echo $VALUE_DATA | base64 -d >| $VALUE_PATH
done

echo "done: $(ls $SECRET_PATH | echo $(wc -l)) secret(s) mounted!"
